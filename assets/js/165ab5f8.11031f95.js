"use strict";(globalThis.webpackChunk_upsetjs_docs=globalThis.webpackChunk_upsetjs_docs||[]).push([[3165],{2129:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var o=n(9703);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var a=o.createContext({}),l=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return o.createElement(a.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,a=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=s,u=p["".concat(a,".").concat(d)]||p[d]||h[d]||r;return n?o.createElement(u,i(i({ref:t},m),{},{components:n})):o.createElement(u,i({ref:t},m))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=p;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:s,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9400:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>r,metadata:()=>i,toc:()=>c,default:()=>l});var o=n(9478),s=(n(9703),n(2129));const r={title:"Themes + Colors"},i={unversionedId:"components/themes",id:"components/themes",isDocsHomePage:!1,title:"Themes + Colors",description:"Dark Theme",source:"@site/docs/components/themes.mdx",sourceDirName:"components",slug:"/components/themes",permalink:"/docs/components/themes",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/components/themes.mdx",version:"current",frontMatter:{title:"Themes + Colors"},sidebar:"someSidebar",previous:{title:"Combination Modes",permalink:"/docs/components/modes"},next:{title:"Addons",permalink:"/docs/addons"}},c=[{value:"Dark Theme",id:"dark-theme",children:[]},{value:"Vega Theme",id:"vega-theme",children:[]},{value:"Custom Theming",id:"custom-theming",children:[]},{value:"Set Colors",id:"set-colors",children:[]}],a={toc:c};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"dark-theme"},"Dark Theme"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS sets={sets} width={780} height={400} selection={selection} onHover={setSelection} theme="dark" />\n      <VennDiagram sets={sets} width={500} height={430} selection={selection} onHover={setSelection} theme="dark" />\n      <KarnaughMap sets={sets} width={700} height={430} selection={selection} onHover={setSelection} theme="dark" />\n    </div>\n  );\n}\n')),(0,s.kt)("h2",{id:"vega-theme"},"Vega Theme"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS sets={sets} width={780} height={400} selection={selection} onHover={setSelection} theme="vega" />\n      <VennDiagram sets={sets} width={500} height={430} selection={selection} onHover={setSelection} theme="vega" />\n      <KarnaughMap sets={sets} width={700} height={430} selection={selection} onHover={setSelection} theme="vega" />\n    </div>\n  );\n}\n')),(0,s.kt)("h2",{id:"custom-theming"},"Custom Theming"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS\n        sets={sets}\n        width={780}\n        height={400}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n        alternatingBackgroundColor={false}\n      />\n      <VennDiagram\n        sets={sets}\n        width={500}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n        filled\n      />\n      <KarnaughMap\n        sets={sets}\n        width={700}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n      />\n    </div>\n  );\n}\n')),(0,s.kt)("h2",{id:"set-colors"},"Set Colors"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = useMemo(() => {\n    const colors = ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494'];\n    return GameOfThronesDataSet.sets.map((s, i) => ({ ...s, color: colors[i] }));\n  }, []);\n  const combinations = useMemo(() => ({ mergeColors }), []);\n  return (\n    <div style={{ backgroundColor: '#303030' }}>\n      <UpSetJS\n        sets={sets}\n        width={780}\n        height={400}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n      <VennDiagram\n        sets={sets}\n        width={500}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n      <KarnaughMap\n        sets={sets}\n        width={700}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n    </div>\n  );\n}\n")))}l.isMDXComponent=!0}}]);