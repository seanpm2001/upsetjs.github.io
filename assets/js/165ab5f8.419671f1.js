(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{115:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var o=t(0),r=t.n(o);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),m=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=m(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=m(t),p=o,h=u["".concat(i,".").concat(p)]||u[p]||d[p]||s;return t?r.a.createElement(h,c(c({ref:n},l),{},{components:t})):r.a.createElement(h,c({ref:n},l))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=p;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<s;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},68:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var o=t(3),r=(t(0),t(115));const s={title:"Themes + Colors"},i={unversionedId:"components/themes",id:"components/themes",isDocsHomePage:!1,title:"Themes + Colors",description:"Dark Theme",source:"@site/docs/components/themes.mdx",slug:"/components/themes",permalink:"/docs/components/themes",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/components/themes.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Combination Modes",permalink:"/docs/components/modes"},next:{title:"Addons",permalink:"/docs/addons"}},c=[{value:"Dark Theme",id:"dark-theme",children:[]},{value:"Vega Theme",id:"vega-theme",children:[]},{value:"Custom Theming",id:"custom-theming",children:[]},{value:"Set Colors",id:"set-colors",children:[]}],a={toc:c};function l({components:e,...n}){return Object(r.b)("wrapper",Object(o.a)({},a,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"dark-theme"},"Dark Theme"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS sets={sets} width={780} height={400} selection={selection} onHover={setSelection} theme="dark" />\n      <VennDiagram sets={sets} width={500} height={430} selection={selection} onHover={setSelection} theme="dark" />\n      <KarnaughMap sets={sets} width={700} height={430} selection={selection} onHover={setSelection} theme="dark" />\n    </div>\n  );\n}\n')),Object(r.b)("h2",{id:"vega-theme"},"Vega Theme"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS sets={sets} width={780} height={400} selection={selection} onHover={setSelection} theme="vega" />\n      <VennDiagram sets={sets} width={500} height={430} selection={selection} onHover={setSelection} theme="vega" />\n      <KarnaughMap sets={sets} width={700} height={430} selection={selection} onHover={setSelection} theme="vega" />\n    </div>\n  );\n}\n')),Object(r.b)("h2",{id:"custom-theming"},"Custom Theming"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = GameOfThronesDataSet.sets;\n  return (\n    <div style={{ backgroundColor: \'#303030\' }}>\n      <UpSetJS\n        sets={sets}\n        width={780}\n        height={400}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n        alternatingBackgroundColor={false}\n      />\n      <VennDiagram\n        sets={sets}\n        width={500}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n        filled\n      />\n      <KarnaughMap\n        sets={sets}\n        width={700}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        color="darkorchid"\n        selectionColor="darkorchid"\n        hasSelectionOpacity={0.6}\n      />\n    </div>\n  );\n}\n')),Object(r.b)("h2",{id:"set-colors"},"Set Colors"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const [selection, setSelection] = React.useState(null);\n  const sets = useMemo(() => {\n    const colors = ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494'];\n    return GameOfThronesDataSet.sets.map((s, i) => ({ ...s, color: colors[i] }));\n  }, []);\n  const combinations = useMemo(() => ({ mergeColors }), []);\n  return (\n    <div style={{ backgroundColor: '#303030' }}>\n      <UpSetJS\n        sets={sets}\n        width={780}\n        height={400}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n      <VennDiagram\n        sets={sets}\n        width={500}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n      <KarnaughMap\n        sets={sets}\n        width={700}\n        height={430}\n        selection={selection}\n        onHover={setSelection}\n        combinations={combinations}\n        hasSelectionOpacity={0.6}\n        selectionColor=\"\"\n      />\n    </div>\n  );\n}\n")))}l.isMDXComponent=!0}}]);