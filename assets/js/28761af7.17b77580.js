"use strict";(globalThis.webpackChunk_upsetjs_docs=globalThis.webpackChunk_upsetjs_docs||[]).push([[9533],{2129:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>p});var a=t(9703);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),m=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=m(e.components);return a.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(t),p=o,h=d["".concat(i,".").concat(p)]||d[p]||u[p]||r;return t?a.createElement(h,s(s({ref:n},c),{},{components:t})):a.createElement(h,s({ref:n},c))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var m=2;m<r;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2133:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>r,metadata:()=>s,toc:()=>l,default:()=>m});var a=t(9478),o=(t(9703),t(2129));const r={title:"BoxPlot"},s={unversionedId:"addons/boxplot",id:"addons/boxplot",isDocsHomePage:!1,title:"BoxPlot",description:"The BoxPlot addons summarizes numerical attributes using a box plot.",source:"@site/docs/addons/boxplot.mdx",sourceDirName:"addons",slug:"/addons/boxplot",permalink:"/docs/addons/boxplot",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/addons/boxplot.mdx",version:"current",frontMatter:{title:"BoxPlot"},sidebar:"someSidebar",previous:{title:"Addons",permalink:"/docs/addons"},next:{title:"Categorical",permalink:"/docs/addons/categorical"}},l=[{value:"Example",id:"example",children:[]},{value:"Queries",id:"queries",children:[]},{value:"Basic Component",id:"basic-component",children:[{value:"Horizontal",id:"horizontal",children:[]},{value:"Vertical",id:"vertical",children:[]}]}],i={toc:l};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"BoxPlot")," addons summarizes numerical attributes using a box plot."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction BoxPlot() {\n  const [selection, setSelection] = useState(null);\n\n  const elems = useMemo(\n    () => [\n      { name: '1', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '2', sets: ['one', 'two'], value: Math.random() },\n      { name: '3', sets: ['one'], value: Math.random() },\n      { name: '4', sets: ['two'], value: Math.random() },\n      { name: '5', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '6', sets: ['three'], value: Math.random() },\n      { name: '7', sets: ['one', 'three'], value: Math.random() },\n      { name: '8', sets: ['one', 'three'], value: Math.random() },\n      { name: '9', sets: ['three'], value: Math.random() },\n      { name: '10', sets: ['two', 'three'], value: Math.random() },\n      { name: '11', sets: ['one'], value: Math.random() },\n      { name: '12', sets: ['one', 'three'], value: Math.random() },\n      { name: '13', sets: ['one', 'three'], value: Math.random() },\n    ],\n    []\n  );\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n\n  return (\n    <UpSetJS\n      sets={sets}\n      combinations={combinations}\n      width={780}\n      height={500}\n      selection={selection}\n      onHover={setSelection}\n      setAddons={[boxplotAddon('value', elems)]}\n      combinationAddons={[boxplotAddon('value', elems, { orient: 'vertical' })]}\n    />\n  );\n}\n")),(0,o.kt)("h2",{id:"queries"},"Queries"),(0,o.kt)("p",null,"This addon also support queries"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const [selection, setSelection] = useState(null);\n\n  const elems = useMemo(\n    () => [\n      { name: '1', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '2', sets: ['one', 'two'], value: Math.random() },\n      { name: '3', sets: ['one'], value: Math.random() },\n      { name: '4', sets: ['two'], value: Math.random() },\n      { name: '5', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '6', sets: ['three'], value: Math.random() },\n      { name: '7', sets: ['one', 'three'], value: Math.random() },\n      { name: '8', sets: ['one', 'three'], value: Math.random() },\n      { name: '9', sets: ['three'], value: Math.random() },\n      { name: '10', sets: ['two', 'three'], value: Math.random() },\n      { name: '11', sets: ['one'], value: Math.random() },\n      { name: '12', sets: ['one', 'three'], value: Math.random() },\n      { name: '13', sets: ['one', 'three'], value: Math.random() },\n    ],\n    []\n  );\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n\n  return (\n    <UpSetJS\n      sets={sets}\n      combinations={combinations}\n      width={780}\n      height={500}\n      selection={selection}\n      onHover={setSelection}\n      queries={[{ name: 'Q1', color: 'green', set: sets[0] }]}\n      setAddons={[boxplotAddon('value', elems)]}\n      combinationAddons={[boxplotAddon('value', elems, { orient: 'vertical' })]}\n    />\n  );\n}\n")),(0,o.kt)("h2",{id:"basic-component"},"Basic Component"),(0,o.kt)("h3",{id:"horizontal"},"Horizontal"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const values = Array(100)\n    .fill(0)\n    .map(() => Math.random());\n  return (\n    <svg width={200} height={50}>\n      <Boxplot width={200} height={50} min={0} max={1} values={values} />\n    </svg>\n  );\n}\n")),(0,o.kt)("h3",{id:"vertical"},"Vertical"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const values = Array(100)\n    .fill(0)\n    .map(() => Math.random());\n  return (\n    <svg width={50} height={200}>\n      <Boxplot width={50} height={200} min={0} max={1} values={values} orient=\"vertical\" />\n    </svg>\n  );\n}\n")))}m.isMDXComponent=!0}}]);