(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{128:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),m=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=m(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=m(t),p=a,b=u["".concat(s,".").concat(p)]||u[p]||d[p]||r;return t?o.a.createElement(b,l(l({ref:n},c),{},{components:t})):o.a.createElement(b,l({ref:n},c))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=p;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=t[c];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return c}));var a=t(3),o=(t(0),t(128));const r={title:"BoxPlot"},s={unversionedId:"addons/boxplot",id:"addons/boxplot",isDocsHomePage:!1,title:"BoxPlot",description:"The BoxPlot addons summarizes numerical attributes using a box plot.",source:"@site/docs/addons/boxplot.mdx",slug:"/addons/boxplot",permalink:"/docs/addons/boxplot",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/addons/boxplot.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Addons",permalink:"/docs/addons"},next:{title:"Categorical",permalink:"/docs/addons/categorical"}},l=[{value:"Example",id:"example",children:[]},{value:"Queries",id:"queries",children:[]},{value:"Basic Component",id:"basic-component",children:[{value:"Horizontal",id:"horizontal",children:[]},{value:"Vertical",id:"vertical",children:[]}]}],i={toc:l};function c({components:e,...n}){return Object(o.b)("wrapper",Object(a.a)({},i,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"BoxPlot")," addons summarizes numerical attributes using a box plot."),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction BoxPlot() {\n  const [selection, setSelection] = useState(null);\n\n  const elems = useMemo(\n    () => [\n      { name: '1', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '2', sets: ['one', 'two'], value: Math.random() },\n      { name: '3', sets: ['one'], value: Math.random() },\n      { name: '4', sets: ['two'], value: Math.random() },\n      { name: '5', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '6', sets: ['three'], value: Math.random() },\n      { name: '7', sets: ['one', 'three'], value: Math.random() },\n      { name: '8', sets: ['one', 'three'], value: Math.random() },\n      { name: '9', sets: ['three'], value: Math.random() },\n      { name: '10', sets: ['two', 'three'], value: Math.random() },\n      { name: '11', sets: ['one'], value: Math.random() },\n      { name: '12', sets: ['one', 'three'], value: Math.random() },\n      { name: '13', sets: ['one', 'three'], value: Math.random() },\n    ],\n    []\n  );\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n\n  return (\n    <UpSetJS\n      sets={sets}\n      combinations={combinations}\n      width={780}\n      height={500}\n      selection={selection}\n      onHover={setSelection}\n      setAddons={[boxplotAddon('value', elems)]}\n      combinationAddons={[boxplotAddon('value', elems, { orient: 'vertical' })]}\n    />\n  );\n}\n")),Object(o.b)("h2",{id:"queries"},"Queries"),Object(o.b)("p",null,"This addon also support queries"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const [selection, setSelection] = useState(null);\n\n  const elems = useMemo(\n    () => [\n      { name: '1', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '2', sets: ['one', 'two'], value: Math.random() },\n      { name: '3', sets: ['one'], value: Math.random() },\n      { name: '4', sets: ['two'], value: Math.random() },\n      { name: '5', sets: ['one', 'two', 'three'], value: Math.random() },\n      { name: '6', sets: ['three'], value: Math.random() },\n      { name: '7', sets: ['one', 'three'], value: Math.random() },\n      { name: '8', sets: ['one', 'three'], value: Math.random() },\n      { name: '9', sets: ['three'], value: Math.random() },\n      { name: '10', sets: ['two', 'three'], value: Math.random() },\n      { name: '11', sets: ['one'], value: Math.random() },\n      { name: '12', sets: ['one', 'three'], value: Math.random() },\n      { name: '13', sets: ['one', 'three'], value: Math.random() },\n    ],\n    []\n  );\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n\n  return (\n    <UpSetJS\n      sets={sets}\n      combinations={combinations}\n      width={780}\n      height={500}\n      selection={selection}\n      onHover={setSelection}\n      queries={[{ name: 'Q1', color: 'green', set: sets[0] }]}\n      setAddons={[boxplotAddon('value', elems)]}\n      combinationAddons={[boxplotAddon('value', elems, { orient: 'vertical' })]}\n    />\n  );\n}\n")),Object(o.b)("h2",{id:"basic-component"},"Basic Component"),Object(o.b)("h3",{id:"horizontal"},"Horizontal"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const values = Array(100)\n    .fill(0)\n    .map(() => Math.random());\n  return (\n    <svg width={200} height={50}>\n      <Boxplot width={200} height={50} min={0} max={1} values={values} />\n    </svg>\n  );\n}\n")),Object(o.b)("h3",{id:"vertical"},"Vertical"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const values = Array(100)\n    .fill(0)\n    .map(() => Math.random());\n  return (\n    <svg width={50} height={200}>\n      <Boxplot width={50} height={200} min={0} max={1} values={values} orient=\"vertical\" />\n    </svg>\n  );\n}\n")))}c.isMDXComponent=!0}}]);