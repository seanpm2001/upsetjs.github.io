"use strict";(globalThis.webpackChunk_upsetjs_docs=globalThis.webpackChunk_upsetjs_docs||[]).push([[6534],{2129:(t,n,e)=>{e.d(n,{Zo:()=>h,kt:()=>d});var a=e(9703);function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function s(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){r(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function l(t,n){if(null==t)return{};var e,a,r=function(t,n){if(null==t)return{};var e,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)e=o[a],n.indexOf(e)>=0||(r[e]=t[e]);return r}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)e=o[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var c=a.createContext({}),i=function(t){var n=a.useContext(c),e=n;return t&&(e="function"==typeof t?t(n):s(s({},n),t)),e},h=function(t){var n=i(t.components);return a.createElement(c.Provider,{value:n},t.children)},m={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(t,n){var e=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,h=l(t,["components","mdxType","originalType","parentName"]),p=i(e),d=r,u=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return e?a.createElement(u,s(s({ref:n},h),{},{components:e})):a.createElement(u,s({ref:n},h))}));function d(t,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var o=e.length,s=new Array(o);s[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=t,l.mdxType="string"==typeof t?t:r,s[1]=l;for(var i=2;i<o;i++)s[i]=e[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,e)}p.displayName="MDXCreateElement"},1710:(t,n,e)=>{e.r(n),e.d(n,{frontMatter:()=>o,metadata:()=>s,toc:()=>l,default:()=>i});var a=e(9478),r=(e(9703),e(2129));const o={title:"Plots",slug:"/plots"},s={unversionedId:"plots/_index",id:"plots/_index",isDocsHomePage:!1,title:"Plots",description:"Similar to the original UpSet and UpSetR, support plots showing histograms, scatterplots, bar charts, or pie charts of attributes of the elements can be created and linked.",source:"@site/docs/plots/_index.mdx",sourceDirName:"plots",slug:"/plots",permalink:"/docs/plots",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/plots/_index.mdx",version:"current",frontMatter:{title:"Plots",slug:"/plots"},sidebar:"someSidebar",previous:{title:"Categorical",permalink:"/docs/addons/categorical"},next:{title:"Bar Chart",permalink:"/docs/plots/barchart"}},l=[{value:"Install",id:"install",children:[]},{value:"Example",id:"example",children:[]}],c={toc:l};function i(t){let{components:n,...e}=t;return(0,r.kt)("wrapper",(0,a.Z)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Similar to the original UpSet and UpSetR, support plots showing histograms, scatterplots, bar charts, or pie charts of attributes of the elements can be created and linked."),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/upsetjs/upsetjs/tree/main/packages/plots"},"@upsetjs/plots")," package contains wrappers around VEGA plots which support selection and queries, to be easily linked with UpSet.js plots."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/4129778/84775584-b0fa8f80-afdf-11ea-9875-f4ae8b9baccb.png",alt:"plots"})),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @upsetjs/plots @upsetjs/react\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @upsetjs/plots @upsetjs/react\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const elems = useMemo(() => {\n    const cats = ['c1', 'c2', 'c3'];\n    return [\n      {\n        name: '1',\n        sets: ['one', 'two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '2',\n        sets: ['one', 'two'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '3',\n        sets: ['one'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '4',\n        sets: ['two'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '5',\n        sets: ['one', 'two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '6',\n        sets: ['three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '7',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '8',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '9',\n        sets: ['three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '10',\n        sets: ['two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '11',\n        sets: ['one'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '12',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '13',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n    ];\n  }, []);\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n  const [selection, setSelection] = useState(null);\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', placeItems: 'center' }}>\n      <UpSetJS\n        selection={selection}\n        onHover={setSelection}\n        sets={sets}\n        combinations={combinations}\n        width={780}\n        height={400}\n        style={{ gridColumn: 'span 2' }}\n      />\n      <Histogram\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={200}\n        attr=\"a\"\n        elems={elems}\n        actions={false}\n      />\n      <BarChart\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={200}\n        vAttr=\"a\"\n        iAttr=\"name\"\n        elems={elems}\n        actions={false}\n      />\n      <Scatterplot\n        selection={selection}\n        onClick={setSelection}\n        // onHover={setSelection}\n        width={300}\n        height={300}\n        xAttr=\"a\"\n        yAttr=\"b\"\n        elems={elems}\n        actions={false}\n      />\n      <PieChart\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={300}\n        attr=\"c\"\n        elems={elems}\n        actions={false}\n      />\n    </div>\n  );\n}\n")))}i.isMDXComponent=!0}}]);