(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{128:function(t,n,e){"use strict";e.d(n,"a",(function(){return m})),e.d(n,"b",(function(){return u}));var a=e(0),r=e.n(a);function o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function s(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function c(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?s(Object(e),!0).forEach((function(n){o(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):s(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function l(t,n){if(null==t)return{};var e,a,r=function(t,n){if(null==t)return{};var e,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)e=o[a],n.indexOf(e)>=0||(r[e]=t[e]);return r}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)e=o[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var i=r.a.createContext({}),h=function(t){var n=r.a.useContext(i),e=n;return t&&(e="function"==typeof t?t(n):c(c({},n),t)),e},m=function(t){var n=h(t.components);return r.a.createElement(i.Provider,{value:n},t.children)},p={inlineCode:"code",wrapper:function(t){var n=t.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(t,n){var e=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,i=l(t,["components","mdxType","originalType","parentName"]),m=h(e),d=a,u=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return e?r.a.createElement(u,c(c({ref:n},i),{},{components:e})):r.a.createElement(u,c({ref:n},i))}));function u(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var o=e.length,s=new Array(o);s[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=t,c.mdxType="string"==typeof t?t:a,s[1]=c;for(var i=2;i<o;i++)s[i]=e[i];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,e)}d.displayName="MDXCreateElement"},84:function(t,n,e){"use strict";e.r(n),e.d(n,"frontMatter",(function(){return o})),e.d(n,"metadata",(function(){return s})),e.d(n,"toc",(function(){return c})),e.d(n,"default",(function(){return i}));var a=e(3),r=(e(0),e(128));const o={title:"Plots",slug:"/plots"},s={unversionedId:"plots/_index",id:"plots/_index",isDocsHomePage:!1,title:"Plots",description:"Similar to the original UpSet and UpSetR, support plots showing histograms, scatterplots, bar charts, or pie charts of attributes of the elements can be created and linked.",source:"@site/docs/plots/_index.mdx",slug:"/plots",permalink:"/docs/plots",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/plots/_index.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Categorical",permalink:"/docs/addons/categorical"},next:{title:"Bar Chart",permalink:"/docs/plots/barchart"}},c=[{value:"Install",id:"install",children:[]},{value:"Example",id:"example",children:[]}],l={toc:c};function i({components:t,...n}){return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Similar to the original UpSet and UpSetR, support plots showing histograms, scatterplots, bar charts, or pie charts of attributes of the elements can be created and linked."),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://github.com/upsetjs/upsetjs/tree/main/packages/plots"},"@upsetjs/plots")," package contains wrappers around VEGA plots which support selection and queries, to be easily linked with UpSet.js plots."),Object(r.b)("p",null,Object(r.b)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/4129778/84775584-b0fa8f80-afdf-11ea-9875-f4ae8b9baccb.png",alt:"plots"})),Object(r.b)("h2",{id:"install"},"Install"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"npm install @upsetjs/plots @upsetjs/react\n")),Object(r.b)("p",null,"or"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @upsetjs/plots @upsetjs/react\n")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Example() {\n  const elems = useMemo(() => {\n    const cats = ['c1', 'c2', 'c3'];\n    return [\n      {\n        name: '1',\n        sets: ['one', 'two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '2',\n        sets: ['one', 'two'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '3',\n        sets: ['one'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '4',\n        sets: ['two'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '5',\n        sets: ['one', 'two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '6',\n        sets: ['three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '7',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '8',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '9',\n        sets: ['three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '10',\n        sets: ['two', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '11',\n        sets: ['one'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '12',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n      {\n        name: '13',\n        sets: ['one', 'three'],\n        a: Math.random(),\n        b: Math.random(),\n        c: cats[Math.min(cats.length - 1, Math.floor(Math.random() * cats.length))],\n      },\n    ];\n  }, []);\n  const { sets, combinations } = useMemo(() => extractCombinations(elems), [elems]);\n  const [selection, setSelection] = useState(null);\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', placeItems: 'center' }}>\n      <UpSetJS\n        selection={selection}\n        onHover={setSelection}\n        sets={sets}\n        combinations={combinations}\n        width={780}\n        height={400}\n        style={{ gridColumn: 'span 2' }}\n      />\n      <Histogram\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={200}\n        attr=\"a\"\n        elems={elems}\n        actions={false}\n      />\n      <BarChart\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={200}\n        vAttr=\"a\"\n        iAttr=\"name\"\n        elems={elems}\n        actions={false}\n      />\n      <Scatterplot\n        selection={selection}\n        onClick={setSelection}\n        // onHover={setSelection}\n        width={300}\n        height={300}\n        xAttr=\"a\"\n        yAttr=\"b\"\n        elems={elems}\n        actions={false}\n      />\n      <PieChart\n        selection={selection}\n        onHover={setSelection}\n        width={300}\n        height={300}\n        attr=\"c\"\n        elems={elems}\n        actions={false}\n      />\n    </div>\n  );\n}\n")))}i.isMDXComponent=!0}}]);