"use strict";(globalThis.webpackChunk_upsetjs_docs=globalThis.webpackChunk_upsetjs_docs||[]).push([[709],{2129:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(9703);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6471:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,metadata:()=>s,toc:()=>a,default:()=>c});var r=n(9478),i=(n(9703),n(2129));const o={title:"UpSet.js Plot"},s={unversionedId:"components/upsetjs",id:"components/upsetjs",isDocsHomePage:!1,title:"UpSet.js Plot",description:"`jsx live",source:"@site/docs/components/upsetjs.mdx",sourceDirName:"components",slug:"/components/upsetjs",permalink:"/docs/components/upsetjs",editUrl:"https://github.com/upsetjs/upsetjs/edit/main/packages/docs/docs/components/upsetjs.mdx",version:"current",frontMatter:{title:"UpSet.js Plot"},sidebar:"someSidebar",previous:{title:"Components",permalink:"/docs/components"},next:{title:"Venn Diagram",permalink:"/docs/components/venndiagram"}},a=[{value:"Skeleton",id:"skeleton",children:[]},{value:"Title",id:"title",children:[]},{value:"Interactivity",id:"interactivity",children:[]},{value:"Click",id:"click",children:[]},{value:"Queries",id:"queries",children:[]},{value:"Small Sets",id:"small-sets",children:[]},{value:"Addons",id:"addons",children:[]}],l={toc:a};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Default() {\n  return <UpSetJS sets={GameOfThronesDataSet.sets} width={780} height={500} />;\n}\n")),(0,i.kt)("h2",{id:"skeleton"},"Skeleton"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Skeleton() {\n  return <UpSetJSSkeleton width={780} height={500} />;\n}\n")),(0,i.kt)("h2",{id:"title"},"Title"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'// import React from \'react\';\n\nfunction Title() {\n  return (\n    <UpSetJS\n      sets={GameOfThronesDataSet.sets}\n      width={780}\n      height={500}\n      title="Game of Thrones"\n      description="Information about the characters of the tv series Game of Thrones"\n    />\n  );\n}\n')),(0,i.kt)("h2",{id:"interactivity"},"Interactivity"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Interactivity() {\n  const [selection, setSelection] = React.useState(null);\n  return (\n    <UpSetJS sets={GameOfThronesDataSet.sets} width={780} height={500} selection={selection} onHover={setSelection} />\n  );\n}\n")),(0,i.kt)("h2",{id:"click"},"Click"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Click() {\n  const [selection, setSelection] = React.useState(null);\n  return (\n    <UpSetJS sets={GameOfThronesDataSet.sets} width={780} height={500} selection={selection} onClick={setSelection} />\n  );\n}\n")),(0,i.kt)("h2",{id:"queries"},"Queries"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Queries() {\n  return (\n    <UpSetJS\n      sets={GameOfThronesDataSet.sets}\n      width={780}\n      height={500}\n      queries={GameOfThronesDataSet.queries}\n      queryLegend\n    />\n  );\n}\n")),(0,i.kt)("h2",{id:"small-sets"},"Small Sets"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction SmallSets() {\n  return (\n    <div>\n      <UpSetJS\n        width={780}\n        height={500}\n        sets={asSets([\n          { name: 'one', elems: [1, 2, 3, 5, 7, 8, 11, 12, 13] },\n          { name: 'two', elems: [1, 2, 4, 5, 10] },\n          { name: 'three', elems: [1, 5, 6, 7, 8, 9, 10, 12, 13] },\n        ])}\n      />\n      <UpSetJS\n        width={780}\n        height={500}\n        sets={asSets([\n          { name: 'one', elems: [1, 2, 3] },\n          { name: 'two', elems: [1, 2, 4, 5] },\n          { name: 'three', elems: [1, 5] },\n        ])}\n      />\n    </div>\n  );\n}\n")),(0,i.kt)("h2",{id:"addons"},"Addons"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import React from 'react';\n\nfunction Addons() {\n  const SetAddon = ({ width, height }) => {\n    return <rect x={1} y={1} width={width - 2} height={height - 2} fill=\"red\"></rect>;\n  };\n\n  const SetAddon2 = ({ width, height }) => {\n    return <rect x={1} y={1} width={width - 2} height={height - 2} fill=\"green\"></rect>;\n  };\n  const [selection, setSelection] = React.useState(null);\n  return (\n    <UpSetJS\n      width={780}\n      height={500}\n      sets={GameOfThronesDataSet.sets}\n      selection={selection}\n      onHover={setSelection}\n      setAddons={[\n        {\n          name: 'red',\n          size: 40,\n          render: SetAddon,\n        },\n        {\n          name: 'green',\n          position: 'before',\n          size: 20,\n          render: SetAddon2,\n        },\n      ]}\n      combinationAddons={[\n        {\n          name: 'red',\n          size: 40,\n          render: SetAddon,\n        },\n        {\n          name: 'green',\n          position: 'before',\n          size: 20,\n          render: SetAddon2,\n        },\n      ]}\n    />\n  );\n}\n")))}c.isMDXComponent=!0}}]);